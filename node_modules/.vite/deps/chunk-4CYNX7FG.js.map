{
  "version": 3,
  "sources": ["../../@mui/base/useMenuItem/useMenuItem.js", "../../@mui/base/useMenuItem/useMenuItemContextStabilizer.js"],
  "sourcesContent": ["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useButton } from '../useButton';\nimport { useListItem } from '../useList';\nimport { DropdownActionTypes } from '../useDropdown';\nimport { DropdownContext } from '../useDropdown/DropdownContext';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\nimport { useCompoundItem } from '../useCompound';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nfunction idGenerator(existingKeys) {\n  return `menu-item-${existingKeys.size}`;\n}\nconst FALLBACK_MENU_CONTEXT = {\n  dispatch: () => {},\n  popupId: '',\n  registerPopup: () => {},\n  registerTrigger: () => {},\n  state: {\n    open: true,\n    changeReason: null\n  },\n  triggerElement: null\n};\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenuItem API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu-item)\n */\nexport function useMenuItem(params) {\n  var _React$useContext;\n  const {\n    disabled = false,\n    id: idParam,\n    rootRef: externalRef,\n    label,\n    disableFocusOnHover = false\n  } = params;\n  const id = useId(idParam);\n  const itemRef = React.useRef(null);\n  const itemMetadata = React.useMemo(() => ({\n    disabled,\n    id: id != null ? id : '',\n    label,\n    ref: itemRef\n  }), [disabled, id, label]);\n  const {\n    dispatch\n  } = (_React$useContext = React.useContext(DropdownContext)) != null ? _React$useContext : FALLBACK_MENU_CONTEXT;\n  const {\n    getRootProps: getListRootProps,\n    highlighted\n  } = useListItem({\n    item: id,\n    handlePointerOverEvents: !disableFocusOnHover\n  });\n  const {\n    index,\n    totalItemCount\n  } = useCompoundItem(id != null ? id : idGenerator, itemMetadata);\n  const {\n    getRootProps: getButtonProps,\n    focusVisible,\n    rootRef: buttonRefHandler\n  } = useButton({\n    disabled,\n    focusableWhenDisabled: true\n  });\n  const handleRef = useForkRef(buttonRefHandler, externalRef, itemRef);\n  React.useDebugValue({\n    id,\n    highlighted,\n    disabled,\n    label\n  });\n  const createHandleClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n    (_otherHandlers$onClic = otherHandlers.onClick) == null || _otherHandlers$onClic.call(otherHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    dispatch({\n      type: DropdownActionTypes.close,\n      event\n    });\n  };\n  const getOwnHandlers = (otherHandlers = {}) => _extends({}, otherHandlers, {\n    onClick: createHandleClick(otherHandlers)\n  });\n  function getRootProps(externalProps = {}) {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    const getCombinedRootProps = combineHooksSlotProps(getOwnHandlers, combineHooksSlotProps(getButtonProps, getListRootProps));\n    return _extends({}, externalProps, externalEventHandlers, getCombinedRootProps(externalEventHandlers), {\n      id,\n      ref: handleRef,\n      role: 'menuitem'\n    });\n  }\n\n  // If `id` is undefined (during SSR in React < 18), we fall back to rendering a simplified menu item\n  // which does not have access to infortmation about its position or highlighted state.\n  if (id === undefined) {\n    return {\n      getRootProps,\n      disabled: false,\n      focusVisible,\n      highlighted: false,\n      index: -1,\n      totalItemCount: 0,\n      rootRef: handleRef\n    };\n  }\n  return {\n    getRootProps,\n    disabled,\n    focusVisible,\n    highlighted,\n    index,\n    totalItemCount,\n    rootRef: handleRef\n  };\n}", "'use client';\n\nimport * as React from 'react';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { ListContext } from '../useList';\n\n/**\n * Stabilizes the ListContext value for the MenuItem component, so it doesn't change when sibling items update.\n *\n * @param id The id of the MenuItem. If undefined, it will be generated with useId.\n * @returns The stable ListContext value and the id of the MenuItem.\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenuItemContextStabilizer API](https://mui.com/base-ui/react-menu/hooks-api/#use-menu-item-context-stabilizer)\n */\nexport function useMenuItemContextStabilizer(id) {\n  const listContext = React.useContext(ListContext);\n  if (!listContext) {\n    throw new Error('MenuItem: ListContext was not found.');\n  }\n  const itemId = useId(id);\n  const {\n    getItemState,\n    dispatch\n  } = listContext;\n  let itemState;\n  if (itemId != null) {\n    itemState = getItemState(itemId);\n  } else {\n    itemState = {\n      focusable: true,\n      highlighted: false,\n      selected: false\n    };\n  }\n  const {\n    highlighted,\n    selected,\n    focusable\n  } = itemState;\n\n  // The local version of getItemState can be only called with the current Option's value.\n  // It doesn't make much sense to render an Option depending on other Options' state anyway.\n  const localGetItemState = React.useCallback(itemValue => {\n    if (itemValue !== itemId) {\n      throw new Error(['Base UI MenuItem: Tried to access the state of another MenuItem.', `itemValue: ${itemValue} | id: ${itemId}`, 'This is unsupported when the MenuItem uses the MenuItemContextStabilizer as a performance optimization.'].join('/n'));\n    }\n    return {\n      highlighted,\n      selected,\n      focusable\n    };\n  }, [highlighted, selected, focusable, itemId]);\n\n  // Create a local (per MenuItem) instance of the ListContext that changes only when\n  // the getItemState's return value changes.\n  // This makes MenuItems re-render only when their state actually change, not when any MenuItem's state changes.\n  const localContextValue = React.useMemo(() => ({\n    dispatch,\n    getItemState: localGetItemState\n  }), [dispatch, localGetItemState]);\n  return {\n    contextValue: localContextValue,\n    id: itemId\n  };\n}"],
  "mappings": "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",
  "names": ["React"]
}
